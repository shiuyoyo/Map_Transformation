Private Function toGEOHK(ByVal IG As Double, ByVal PHI As Double, ByVal FLAM As Double)
            '**** CONVERT GEODETIC COORDINTES TO HK METRIC GRID COORDINATES
            ' ENTRY:
            '        IG   ; 1 For HAYFORD SPHEROID, 2 For WG282 SPHEROID
            '        PHI: LATITUDE   IN DECIMAL DEGREES
            '         FLAM: LONGITUDE  IN DECIMAL DEGREES
            ' Return
            '        X      NORTHING(HK 1980 METRIC DATAM)
            '         Y: EASTING
            Static Dim pi As Double = 3.14159265359
            Dim gps As New Dictionary(Of String, Integer)

            Dim RAD, phi0, FLAM0, RPHI As Double
            Dim RLAM, SM0, SM1, CJ As Double
            Dim TPHI, TPHI2, TPHI4, TPHI6 As Double
            Dim TT, TT2, TT3, TT4 As Double
            Dim XF, X1, X2, X3, X4 As Double
            Dim YF, Y1, Y2, Y3 As Double
            Dim WX, WY, a, b, C, D As Double
            Dim RHO, RMU As Double
            Dim X, Y As Double

            '        Coord * result = [[Coord alloc] init];
            'RadiusData * RadiusResult = [[RadiusData alloc] init];

            RAD = pi / 180.0

            '--- CONVERT PROJECTION ORIGIN TO RADIANS

            If IG = 1 Then
                phi0 = (22.0 + 18.0 / 60.0 + 43.68 / 3600.0) * RAD
                FLAM0 = (114.0 + 10.0 / 60.0 + 42.8 / 3600.0) * RAD
            Else
                phi0 = (22.0 + 18.0 / 60.0 + 38.17 / 3600.0) * RAD
                FLAM0 = (114.0 + 10.0 / 60.0 + 51.65 / 3600.0) * RAD
            End If

            '--- CONVERT LATITUDE And LONGITUDE TO RADIANS
            RPHI = PHI * RAD

            RLAM = FLAM * RAD

            '--- COMPUTE MERIDIAN ARCS
            SM0 = Me.SMER(IG, 0, phi0)
            SM1 = Me.SMER(IG, 0, RPHI)

            '//--- COMPUTE RADII
            Dim numbers(2) As Double
            numbers = Me.RADIUS(IG, RPHI)
            RHO = numbers(0)
            RMU = numbers(1)

            '//--- COMPUTE CJ (IN RADIANS)
            CJ = (RLAM - FLAM0) * Math.Cos(RPHI)
            TPHI = Math.Tan(RPHI)
            TPHI2 = TPHI * TPHI
            TPHI4 = TPHI2 * TPHI2
            TPHI6 = TPHI2 * TPHI4
            TT = RMU / RHO
            TT2 = Math.Pow(TT, 2)
            TT3 = Math.Pow(TT, 3)
            TT4 = Math.Pow(TT, 4)

            '//--- COMPUTE  NORTHING
            XF = SM1 - SM0
            X1 = RMU / 2.0 * Math.Pow(CJ, 2) * TPHI
            X2 = X1 / 12.0 * Math.Pow(CJ, 2) * (4.0 * TT2 + TT - TPHI2)
            X3 = X2 / 30.0 * Math.Pow(CJ, 2) * (8.0 * TT4 * (11.0 - 24.0 * TPHI2) - 28.0 * TT3 * (1.0 - 6.0 * TPHI2) + TT2 * (1.0 - 32.0 * TPHI2) - 2 * TT * TPHI2 + TPHI4)
            X4 = X3 / 56.0 * Math.Pow(CJ, 2) * (1385.0 - 3111.0 * TPHI2 + 543.0 * TPHI4 - TPHI6)
            X = XF + X1 + X2 + X3 + X4 + 819069.8

            '//--- COMPUTE  EASTING
            YF = RMU * CJ
            Y1 = YF / 6.0 * Math.Pow(CJ, 2)
            Y2 = Y1 / 20.0 * Math.Pow(CJ, 2)
            Y3 = Y2 / 42.0 * Math.Pow(CJ, 2)
            Y1 = Y1 * (TT - TPHI2)
            Y2 = Y2 * (4.0 * TT3 * (1.0 - 6.0 * TPHI2) + TT2 * (1.0 + 8.0 * TPHI2) - TT * 2.0 * TPHI2 + TPHI4)
            Y3 = Y3 * (61.0 - 479.0 * TPHI2 + 179.0 * TPHI4 - TPHI6)
            Y = YF + Y1 + Y2 + Y3 + 836694.05

            If IG = 2 Then

                WX = X
                WY = Y

                '//---   TRANSFROM WGS84 GRID TO HK 1980 GRID
                a = 0.9999998373
                b = -0.000027858
                C = -23.098331
                D = 23.149765
                X = a * WX - b * WY + C
                Y = b * WX + a * WY + D

                ' Add two keys.
                gps.Add("X", X)
                gps.Add("Y", Y)

            End If

            Return gps
        End Function

        Function SMER(ByVal IG As Double, ByVal PHI0 As Double, ByVal PHIF As Double)

            '//**** COMPUTE MERIDIAN ARC
            '// ENTRY:
            '//         PHI0  LATITUDE OF ORIGIN
            '//         PHIF : LATITUDE OF PROJECTION TO CENTRAL MERIDIAN
            '// RETURN :
            '//         SMER : MERIDIAN ARC

            Dim AXISM, FLAT, ECC As Double
            Dim a, b, C, D, DP0 As Double
            Dim DPO, DP2 As Double
            Dim DP4, DP6 As Double
            Dim SMER1 As Double

            If IG = 1 Then
                AXISM = 6378388.0
                FLAT = 1.0 / 297.0
            Else
                AXISM = 6378137.0
                FLAT = 1.0 / 298.2572235634
                ECC = 2 * FLAT - Math.Pow(FLAT, 2)
                ECC = Math.Sqrt(ECC)
                a = 1 + 3.0 / 4.0 * Math.Pow(ECC, 2) + 45.0 / 64.0 * Math.Pow(ECC, 4) + 175.0 / 256.0 * Math.Pow(ECC, 6)
                b = 3.0 / 4.0 * Math.Pow(ECC, 2) + 15.0 / 16.0 * Math.Pow(ECC, 4) + 525.0 / 512.0 * Math.Pow(ECC, 6)
                C = 15.0 / 64.0 * Math.Pow(ECC, 4) + 105.0 / 256.0 * Math.Pow(ECC, 6)
                D = 35.0 / 512.0 * Math.Pow(ECC, 6)
                DP0 = PHIF - PHI0
                DP2 = Math.Sin(2.0 * PHIF) - Math.Sin(2.0 * PHI0)
                DP4 = Math.Sin(4.0 * PHIF) - Math.Sin(4.0 * PHI0)
                DP6 = Math.Sin(6.0 * PHIF) - Math.Sin(6.0 * PHI0)
                SMER1 = AXISM * (1 - Math.Pow(ECC, 2))
                SMER1 = SMER1 * (a * DP0 - b * DP2 / 2.0 + C * DP4 / 4.0 - D * DP6 / 6.0)

            End If
            Return SMER1
        End Function
        '--- SMER

        Function RADIUS(ByVal IG As Double, ByVal PHI As Double)

            '//**** COMPUTE RADII OF CURVATURE OF A GIVEN LATITUDE
            '// ENTRY:
            '//         PHI   LATITUDE
            '// RETURN:
            '//         RHO   RADIUS OF MERIDIAN
            '//         PMU  : RADIUS OF PRIME VERTICAL

            Dim AXISM, FLAT, ECC As Double
            Dim FAC As Double
            Dim RHO, RMU As Double


            If IG = 1 Then
                AXISM = 6378388.0
                FLAT = 1.0 / 297.0

            Else
                AXISM = 6378137.0
                FLAT = 1.0 / 298.2572235634
            End If
            ECC = 2.0 * FLAT - Math.Pow(FLAT, 2)
            FAC = 1.0 - ECC * (Math.Pow(Math.Sin(PHI), 2))
            RHO = AXISM * (1 - ECC) / Math.Pow(FAC, 1.5)
            RMU = AXISM / Math.Sqrt(FAC)

            Dim numbers(2) As Double
            numbers(0) = RHO
            numbers(1) = RMU
            Return numbers
        End Function